*trace dead*
= Observe =
  *What defines Success?*
  The trace would always run despite how long the program runs

  *What is the problem?*
  The trace instrumentation dies after the program runs for a long time.

  *Evidence:*
    *Evidence that contradicts Assumptions:*
      * The SPY_RING_BUFFER_SIZE is set to 500 and the TRC_RING_BUFFER_SIZE is
        smaller.
        
      * When the TRC_RING_BUFFER_SIZE was set to 5, the trace death occured
        after 3 trace outputs of the networked_horse_archer.py with time
        compression set to 50:1
        
      * At different time compressions the trace death occurs at the same number
        of listings
      
    *Evidence that does not contradicts Assumptions:*
      * When the TRC_RING_BUFFER_SIZE size was reduce from 150 to 50 the trace
        death occured at ~50 seconds.  This is roughly 1/3 of the time of 2:24
        seen for the trace death for a TRC_RING_BUFFER_SIZE size of 150.
    
  
= Orient =
  *Symptoms:*
  Using the networked_horse_archer.py set to time compression 50:1 the trace
  dies after running for 2:24.  Turned on both trace and spy instrumentation.
  The spy instrumentation works even when the trace output stops.
  
  *Questions for trace dead:*
    Can you simplify your test?
    Can you baseline?
    Do you have enough information?
    What recently changed?
    Can you speed up the test?
    Why does this effect the trace and not the spy?

  *Assumptions:*
    The program is running past the trace death
    The spy instrumentation works forever

= Decide =
  *Idea/Hypotheses for trace dead: >=5*
  * [ ] It is the trace buffer
  * [ ] It is something you can't think of
  * [ ] It is the post event queue
  * [ ] You need more information
  * [ ] Why does this effect the trace and not the spy?
  * [ ] It smells like a queue problem
  * [ ] Can you speed up the failure by shrinking the queue size?
  * [ ] The queue should be a ring buffer, is it?
  * [ ] The spy instrumentation is broken too
  * [ ] The trace buffer determines the number of trace output events that will
        occur prior to trace death
  * [ ] The time compression is related to the trace death

  *Chosen Idea/Hypothesis*
  The time compression is related to the trace death

  *Plan to Expand-on-Idea/Disprove-Hypothesis*
  * reduce the time compression to 10:1 observe that trace death occurs for another
    number other than 3
  * increase  the time compression to 500:1 observe that trace death occurs for another
    number other than 3

= Act =

