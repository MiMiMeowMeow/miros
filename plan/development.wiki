*Refactor Miros*

= Observe =
  *What defines Success?*
  
  *Notes:*
  statecharts = state-diagrams + depth + orthogonality +
                broadcast-communications + time 
 
  1) "in all airborne state, when yellow handle is pulled seat will be ejected"
  2) "gearbox change state is independent of breaking system"
  3) "when selection button is pressed enter selected mode"
  4) "dispay-mode consists of time-display, data-display and stopwatch-display"

  1 calls for ability to cluster events into super states
  2 introduces the idea of independence or orthogonality
  3 more general transition than a signel event-labelled arrow[?]
  4 captures the refinement of states[?]
  
  The idea of zooming ... focusing into the detail of an aspect of the system.
  Event though I know what they are talking about, the paper is hard to read.
  
  By using this library you are in better shape to use the quantum programming
  library, since it is using the same concepts and similar event processor.
  
  In the writing talk about congnitive load
  
  
  An understandable heart to the miros python package
  * [ ]Immediate Actions
    * [X] Build test post_event
    * [X] Build test for cancel_events
    * [X] Build test for cancel_event
    * [X] Merge post_event into post_fifo/post_lifo
    * [X] Adjust all tests to work with the new api
    * [X] Write doc strings
    * [X] Lint the files with sane subset of PEP8
    * [X] Create a working chart with posting threads
    * [X] Write docs in documentation (recipes)
    * [ ] Create a packed example of how to use events

  * [.] High Level Project List
    * [ ] refactor signals to simplify the design
    * [O] Active Object
      * [ ] Heart Beat demonstration
      * [X] one-shot
      * [X] instrument one-shot
      * [X] multi-shot
      * [X] instrument multi-shot shot
    * [o] Basic Examples
      * [X] Simple HSM in an active object
      * [ ] Simple Set of Hsms in active objects communicating with the task
            fabric
    * [ ] Add Pattern Support
      * [ ] Ultimate Hook
      * [ ] Reminder
      * [ ] Deferred Event
      * [ ] Orthogonal Component
      * [ ] Transition to State History
      * [ ] Multi-Chart Race
      * [ ] Multi-Chart Pend
    * [ ] Recipes
      * [ ] Working table of contents in sphinx
      * [ ] State boiler code
      * [ ] Creating an active object
      * [ ] Starting an active object
      * [ ] Using the post_fifo
      * [ ] Using the post_lifo
      * [ ] Creating a signal guard
      * [ ] Creating a schedule of posted events within the chart
      * [ ] sub/pub model with two different charts
    * [ ] Add outside ultimate hook feature
    * [ ] Add statistics
    * [ ] Wrap it with a factory
    * [ ] Create factory tests
    * [ ] Confirm Api the same as miros
    * [ ] Write documentation
    * [ ] Roll up into package miros 2.0.0

  *Someday Maybe*
  * [ ] Research Protocol Theory
  * [ ] A message/protocol as a chart

  *Resources:*
  Setting up a python project is needlessly complicated, but here are the steps:
  * [ ] Move your production files into a subdirectory, named after your project
        (miros)
  * [ ] Add a setup.py file at the same level as this directory
  * [ ] Install virtualenv
  * [ ] > virtualenv <whatever> # in this case: > virtualenv prot
  * [ ] In bash > source ./prot/Scripts/activate
  * [ ] In the named subdirectory, (miros), add a file called __init__.py, this
        turns it into a package.  Your test code will be able to import files
        into themselves like:  from miros.events import <Class>
  * [ ] Add a test directory
  * [ ] Name your tests as <whatever>_test.py
  * [ ] In the test files your imports should work
  * [ ] Install your local package > pip install --editable .
  * [ ] Write a super simple test that just fails with tries to import something
        from your package.  Test it with > pytest, confirm failure from assert
        not an import error.
  * [ ] Wrestle with it until it works.

  *What is the problem?*

  *Evidence that contradicts Assumptions:*

= Orient =
  *Symptoms of current issue:*
  
  *Questions regarding current issue:*

  *Assumptions:*

= Decide =
  *Idea/Hypothesises: >=5*

  *Chosen Idea/Hypothesis*

  *Plan to Expand-on-Idea/Disprove-Hypothesis*

= Act =

