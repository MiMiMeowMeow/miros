*Refactor Miros*
= Observe =
  *What defines Success?*
  An understandable heart to the miros python package
  
  * [X] Reference a working framework
  * [X] Build out events first
  * [X] Create an editable package
  * [X] Create Test Structure
  * [X] Create a virtual environment
  * [X] Create an example function
  * [X] Mimic/Extend Designs
  * [ ] refactor signals to simplify the design
  * [X] Add spy
    * [X] It should work on init
    * [X] It should describe T (obtusely)
    * [X] It should describe S (obtusely)
    * [X] It should reflect on the ultimate hook (no T)
    * [X] It should describe the end state
    * [X] Work as a decorator
  * [X] Add trace
  * [ ] Add outside ultimate hook feature
  * [ ] Add Pattern Support
  * [ ] Wrap it with a factory
  * [ ] Create factory tests
  * [ ] Confirm Api the same as miros
  * [ ] Write documentation
  * [ ] Roll up into package miros 2.0.0
  * [ ] Write up docs using sphinx
  

  *Resources:*
  Setting up a python project is needlessly complicated, but here are the steps:
  * [ ] Move your production files into a subdirectory, named after your project
        (miros)
  * [ ] Add a setup.py file at the same level as this directory
  * [ ] Install virtualenv
  * [ ] > virtualenv <whatever> # in this case: > virtualenv prot
  * [ ] In bash > source ./prot/Scripts/activate
  * [ ] In the named subdirectory, (miros), add a file called __init__.py, this
        turns it into a package.  Your test code will be able to import files
        into themselves like:  from miros.events import <Class>
  * [ ] Add a test directory
  * [ ] Name your tests as <whatever>_test.py
  * [ ] In the test files your imports should work
  * [ ] Install your local package > pip install --editable .
  * [ ] Write a super simple test that just fails with tries to import something
        from your package.  Test it with > pytest, confirm failure from assert
        not an import error.
  * [ ] Wrestle with it until it works.
        
  *What is the problem?*
  

  *Evidence that contradicts Assumptions:*

= Orient =
  *Symptoms:*
  When it crashes I don't know who to fix it
  *Questions for refactor Miros:*
    Can you simplify your tests?
    Do understand enough to get going?
    How do you know when it works?

  *Assumptions:*

= Decide =
  *Idea/Hypothesises for Refactor Miros: >=5*
  * [ ] Reference a working framework
  * [ ] Build out events first
  * [ ] Create an example function
  * [ ] Mimic Designs
    * [ ] ctor
    * [ ] init
    * [ ] dispatch -> tran
    * [ ] is_in
    * [ ] child_state
  * [ ] Create Test Structure
  * [ ] Get some transitions working
  * [ ] Add more reflectivity
  * [ ] Add spy
  * [ ] Add trace
  * [ ] Wrap it with a factory
  * [ ] Create factory tests
  * [ ] Document the fuck out of it
  
  *Idea/Hypothesises for Refactor Miros: >=5*
  
  *Chosen Idea/Hypothesis*


  *Plan to Expand-on-Idea/Disprove-Hypothesis*

= Act =

